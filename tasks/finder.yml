---
- block:
  - name: "Finder - General - Show hard disks on the desktop"
    osx_defaults: { domain: 'com.apple.finder', key: "{{ item.key }}", type: "{{ item.type }}", value: "{{ item.value }}" }
    loop:
      - { key: 'ShowHardDrivesOnDesktop',         type: 'bool',   value: '{{ Finder_ShowHardDrivesOnDesktop }}'}
      - { key: 'ShowExternalHardDrivesOnDesktop', type: 'bool',   value: '{{ Finder_ShowExternalHardDrivesOnDesktop }}'}
      - { key: 'ShowRemovableMediaOnDesktop',     type: 'bool',   value: '{{ Finder_ShowRemovableMediaOnDesktop }}'}
      - { key: 'ShowMountedServersOnDesktop',     type: 'bool',   value: '{{ Finder_ShowMountedServersOnDesktop }}'}
    when: item.value != ''
    notify: restart Finder

  - name: "Finder - General - View Settings"
    osx_defaults: { domain: 'com.apple.finder', key: "{{ item.key }}", type: "{{ item.type }}", value: "{{ item.value  }}" }
    loop:
      - { key: 'FXPreferredViewStyle', type: 'string', value: '{{ Finder_FXPreferredViewStyle }}'}
      - { key: 'FXPreferredGroupBy',   type: 'string', value: '{{ Finder_FXPreferredGroupBy }}'}
      - { key: 'ShowTabView',          type: 'bool',   value: '{{ Finder_ShowTabView }}'}
      - { key: 'ShowPathbar',          type: 'bool',   value: '{{ Finder_ShowPathbar }}'}
      - { key: 'ShowStatusBar',        type: 'bool',   value: '{{ Finder_ShowStatusBar }}'}
      - { key: 'ShowSidebar',          type: 'bool',   value: '{{ Finder_ShowSidebar }}'}
      - { key: 'ColumnShowIcons',      type: 'bool',   value: '{{ Finder_ColumnShowIcons }}'}
    when: item.value != ''
    notify: restart Finder

  - name: "Finder - General - New Finder windows show"
    osx_defaults: { domain: 'com.apple.finder', key: 'NewWindowTargetPath', type: string, value: "{{ item.value }}" }
    with_items:
      - { name: "PfCm", value: "" }
      - { name: "PfVo", value: "file:///" }
      - { name: "PfHm", value: "file://${HOME}/" }
      - { name: "PfDe", value: "file://${HOME}/Desktop/" }
      - { name: "PfDo", value: "file://${HOME}/Documents/" }
      - { name: "PfAF", value: "file:///System/Library/CoreServices/Finder.app/Contents/Resources/MyLibraries/myDocuments.cannedSearch" }
    when: Finder_NewWindowTarget is defined and item.name == Finder_NewWindowTarget
    notify: restart Finder

  - name: "Finder - Desktop - IconViewSettings"
    shell: |
      /usr/libexec/PlistBuddy -c "Delete :DesktopViewSettings:IconViewSettings:{{ item.key }}" ~/Library/Preferences/com.apple.finder.plist
      /usr/libexec/PlistBuddy -c "Add :DesktopViewSettings:IconViewSettings:{{ item.key }} {{ item.type }} {{ item.value }}" ~/Library/Preferences/com.apple.finder.plist
    loop:
      - { key: 'arrangeBy', type: 'string', value: '{{ Finder_DVSIVSarrangeBy }}' }
      - { key: 'iconSize', type: 'integer', value: '{{ Finder_DVSIVSiconSize }}' }
      - { key: 'showItemInfo', type: 'bool', value: '{{ Finder_DVSIVSshowItemInfo }}' }
      - { key: 'gridSpacing', type: 'integer', value: '{{ Finder_DVSIVSgridSpacing }}' }
      - { key: 'labelOnBottom', type: 'bool', value: '{{ Finder_DVSIVSlabelOnBottom }}' }
    when: item.value != ''
    notify: restart Finder
  # It is necessary to `Delete` then `Add` the IconView preferences because:
  # - if they are not existing it is not possible to use `Set` and is necessary to use `Add`
  # - if we use `Add` and the item already exists it throws an error
  - name: "Finder - Standard - IconViewSettings"
    shell: |
      /usr/libexec/PlistBuddy -c "Delete :StandardViewSettings:IconViewSettings:{{ item.key }}" ~/Library/Preferences/com.apple.finder.plist
      /usr/libexec/PlistBuddy -c "Add :StandardViewSettings:IconViewSettings:{{ item.key }} {{ item.type }} {{ item.value }}" ~/Library/Preferences/com.apple.finder.plist
    loop:
      - { key: 'arrangeBy', type: 'string', value: '{{ Finder_SVSIVSarrangeBy }}' }
      - { key: 'iconSize', type: 'integer', value: '{{ Finder_SVSIVSiconSize }}' }
      - { key: 'showItemInfo', type: 'bool', value: '{{ Finder_SVSIVSshowItemInfo }}' }
      - { key: 'gridSpacing', type: 'integer', value: '{{ Finder_SVSIVSgridSpacing }}' }
    when: item.value != '' # item.value is used to verify that there's a value to replace the value in the following task
    notify: restart Finder

  - name: "Finder - Advanced - Show all filename extensions"
    osx_defaults: { domain: 'NSGlobalDomain', key: 'AppleShowAllExtensions', type: bool, value: "{{ Finder_AppleShowAllExtensions }}" }
    when: Finder_AppleShowAllExtensions is defined
    notify: restart Finder

  - name: "Finder - Advanced - Various"
    osx_defaults: { domain: 'com.apple.finder', key: "{{ item.key }}", type: "{{ item.type }}", value: "{{ item.value }}" }
    loop:
      - { key: 'FXEnableExtensionChangeWarning', type: 'bool',   value: '{{ Finder_FXEnableExtensionChangeWarning }}'}
      - { key: 'WarnOnEmptyTrash',               type: 'bool',   value: '{{ Finder_WarnOnEmptyTrash }}'}
      - { key: 'FXDefaultSearchScope',           type: 'string', value: '{{ Finder_FXDefaultSearchScope }}'}
      - { key: 'NewWindowTarget',                type: 'string', value: '{{ Finder_NewWindowTarget }}'}
      - { key: 'FinderSpawnTab',                 type: 'bool',   value: '{{ Finder_FinderSpawnTab }}'}
    when: item.value != ''
    notify: restart Finder

  - name: "Finder - Extra - Various"
    osx_defaults: { domain: 'com.apple.finder', key: "{{ item.key }}", type: "{{ item.type }}", value: "{{ item.value }}" }
    loop:
      - { key: '_FXShowPosixPathInTitle', type: 'bool', value: '{{ Finder_FXShowPosixPathInTitle }}'}
      - { key: 'AppleShowAllFiles',       type: 'bool', value: '{{ Finder_AppleShowAllFiles }}'}
      - { key: 'QLEnableTextSelection',   type: 'bool', value: '{{ Finder_QLEnableTextSelection }}'}
      - { key: 'QuitMenuItem',            type: 'bool', value: '{{ Finder_QuitMenuItem }}'}
    when: item.value != ''
    notify: restart Finder

  - name: "Finder - Extra - Avoid creation of .DS_Store files on network volumes"
    osx_defaults: { domain: 'com.apple.desktopservices', key: 'DSDontWriteNetworkStores', type: bool, value: "{{ Finder_DSDontWriteNetworkStores }}" }
    when: Finder_DSDontWriteNetworkStores is defined
    notify: restart Finder

  - name: "Finder - Extra - Disable disk image verification"
    osx_defaults: { domain: 'com.apple.frameworks.diskimages', key: '{{ item }}', type: bool, value: "{{ Finder_DisableDiskImageVerrification }}" }
    when: Finder_DisableDiskImageVerrification is defined
    with_items: [ "skip-verify", "skip-verify-locked", "skip-verify-remote"]
    notify: restart Finder
  become: "{{ (target_user_id != ansible_user_id) | bool }}"
  become_user: "{{ target_user_id }}"
