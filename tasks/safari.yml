---
- block:

  - name: "Safari - General - Opens with"
    osx_defaults: { domain: 'com.apple.safari', key: "{{ item.key }}", type: "{{ item.type }}", value: "{{ item.value }}" }
    loop: "{{  Safari_OpenWith_Options }}"
    when:
      - Safari_OpensWith is defined
      - item.name == Safari_OpensWith
    notify: restart Safari

  - name: "Safari - General"
    osx_defaults: { domain: 'com.apple.safari', key: "{{ item.0.key }}", type: "{{ item.0.type }}", value: "{{ item.1.value }}" }
    with_subelements:
      - "{{ Safari_General_Options }}"
      - value
    when: (item.0.key == 'NewWindowBehavior'       and (item.1.name == Safari_NewWindowBehavior       or item.1.value == Safari_NewWindowBehavior)) or
          (item.0.key == 'NewTabBehavior'          and (item.1.name == Safari_NewTabBehavior          or item.1.value == Safari_NewTabBehavior)) or
          (item.0.key == 'HistoryAgeInDaysLimit'   and (item.1.name == Safari_HistoryAgeInDaysLimit   or item.1.value == Safari_HistoryAgeInDaysLimit)) or
          (item.0.key == 'TopSitesGridArrangement' and (item.1.name == Safari_TopSitesGridArrangement or item.1.value == Safari_TopSitesGridArrangement)) or
          (item.0.key == 'DownloadsClearingPolicy' and (item.1.name == Safari_DownloadsClearingPolicy or item.1.value == Safari_DownloadsClearingPolicy)) or
          (item.0.key == 'AutoOpenSafeDownloads'   and (item.1.name == Safari_AutoOpenSafeDownloads   or item.1.value == Safari_AutoOpenSafeDownloads|bool))
    notify: restart Safari

  - name: "Safari - Tabs"
    osx_defaults: { domain: 'com.apple.safari', key: "{{ item.0.key }}", type: "{{ item.0.type }}", value: "{{ item.1.value }}" }
    with_subelements:
      - "{{ Safari_Tabs_Options }}"
      - value
    when: (item.0.key == 'TabCreationPolicy'       and (item.1.name == Safari_TabCreationPolicy       or item.1.value == Safari_TabCreationPolicy)) or
          (item.0.key == 'CommandClickMakesTabs'   and (item.1.name == Safari_CommandClickMakesTabs   or item.1.value == Safari_CommandClickMakesTabs|bool)) or
          (item.0.key == 'OpenNewTabsInFront'      and (item.1.name == Safari_OpenNewTabsInFront      or item.1.value == Safari_OpenNewTabsInFront|bool)) or
          (item.0.key == 'Command1Through9SwitchesTabs' and (item.1.name == Safari_Command1Through9SwitchesTabs or item.1.value == Safari_Command1Through9SwitchesTabs|bool))
    notify: restart Safari

  - name: "Safari - Autofill"
    osx_defaults: { domain: 'com.apple.safari', key: "{{ item.0.key }}", type: "{{ item.0.type }}", value: "{{ item.1.value }}" }
    with_subelements:
      - "{{ Safari_Autofill_Options }}"
      - value
    when: (item.0.key == 'AutoFillFromAddressBook'    and (item.1.name == Safari_AutoFillFromAddressBook    or item.1.value == Safari_AutoFillFromAddressBook|bool)) or
          (item.0.key == 'AutoFillPasswords'          and (item.1.name == Safari_AutoFillPasswords          or item.1.value == Safari_AutoFillPasswords|bool)) or
          (item.0.key == 'AutoFillCreditCardData'     and (item.1.name == Safari_AutoFillCreditCardData     or item.1.value == Safari_AutoFillCreditCardData|bool)) or
          (item.0.key == 'AutoFillMiscellaneousForms' and (item.1.name == Safari_AutoFillMiscellaneousForms or item.1.value == Safari_AutoFillMiscellaneousForms|bool))
    notify: restart Safari


  - name: "Safari - Search - Search Engine"
    osx_defaults: { domain: 'NSGlobalDomain', key: 'NSDefaultDisplayName', type: string, value: "{{ item }}" }
    loop:
      - "{{ Safari_SearchEngine }}"
    when: Safari_SearchEngine is defined
    notify: restart Safari

  - name: "Safari - Search"
    osx_defaults: { domain: "{{ item.0.domain }}", key: "{{ item.0.key }}", type: "{{ item.0.type }}", value: "{{ item.1.value }}" }
    with_subelements:
      - "{{ Safari_Search_Options }}"
      - value
    when: (item.0.key == 'NSProviderIdentifier'               and (item.1.name == Safari_SearchEngine                       or item.1.value == Safari_SearchEngine)) or
          (item.0.key == 'SuppressSearchSuggestions'          and (item.1.name == Safari_IncludeSearchSuggestions           or item.1.value == Safari_IncludeSearchSuggestions|bool)) or
          (item.0.key == 'WebsiteSpecificSearchEnabled'       and (item.1.name == Safari_WebsiteSpecificSearchEnabled       or item.1.value == Safari_WebsiteSpecificSearchEnabled|bool)) or
          (item.0.key == 'PreloadTopHit'                      and (item.1.name == Safari_PreloadTopHit                      or item.1.value == Safari_PreloadTopHit|bool)) or
          (item.0.key == 'ShowFavoritesUnderSmartSearchField' and (item.1.name == Safari_ShowFavoritesUnderSmartSearchField or item.1.value == Safari_ShowFavoritesUnderSmartSearchField|bool))
    notify: restart Safari

  - name: "Safari - Security"
    osx_defaults: { domain: 'com.apple.safari', key: "{{ item.0.key }}", type: "{{ item.0.type }}", value: "{{ item.1.value }}" }
    with_subelements:
      - "{{ Safari_Security_Options }}"
      - value
    when: (item.0.key == 'WarnAboutFraudulentWebsites' and (item.1.name == Safari_WarnAboutFraudulentWebsites or item.1.value == Safari_WarnAboutFraudulentWebsites|bool)) or
          (item.0.key == 'com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptEnabled' and (item.1.name == Safari_JavaScriptEnabled or item.1.value == Safari_JavaScriptEnabled|bool)) or
          (item.0.key == 'com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptCanOpenWindowsAutomatically' and not (item.1.name == Safari_BlockPopupWindows or item.1.value == Safari_BlockPopupWindows|bool)) or
          (item.0.key == 'com.apple.Safari.ContentPageGroupIdentifier.WebKit2WebGLEnabled' and (item.1.name == Safari_AllowWebGL or item.1.value == Safari_AllowWebGL|bool)) or
          (item.0.key == 'com.apple.Safari.ContentPageGroupIdentifier.WebKit2PluginsEnabled' and (item.1.name == Safari_AllowPlugins or item.1.value == Safari_AllowPlugins|bool))
    notify: restart Safari

  - fail:
    ignore_errors: false

  - name: "Safari - Privacy - Cookies and website data"
    osx_defaults: { domain: 'com.apple.safari', key: "{{ item.key }}", type: int, value: "{{ item.value }}" }
    with_items: "{{ Safari_CookiesAndWebsiteData_Options }}"
    when: Safari_Cookies is defined and item.name == Safari_Cookies
    notify: restart Safari

  - name: "Safari - Privacy - Website use of location services"
    osx_defaults: { domain: 'com.apple.safari', key: 'SafariGeolocationPermissionPolicy', type: int, value: "{{ item.value }}" }
    with_items: "{{ Safari_GeolocationPermissionPolicies }}"
    when:
      - Safari_SafariGeolocationPermissionPolicy is defined
      - (item.name == Safari_SafariGeolocationPermissionPolicy or item.value == Safari_SafariGeolocationPermissionPolicy)
    notify: restart Safari

  - name: "Safari - Privacy - Website tracking - Ask websites not to track me"
    osx_defaults: { domain: 'com.apple.safari', key: 'SendDoNotTrackHTTPHeader', type: bool, value: "{{ Safari_SendDoNotTrackHTTPHeader }}" }
    when: Safari_SendDoNotTrackHTTPHeader is defined
    notify: restart Safari

  - name: "Safari - Notification - Allow websites to ask for permission to send push notifications"
    osx_defaults: { domain: 'com.apple.safari', key: 'CanPromptForPushNotifications', type: bool, value: "{{ Safari_CanPromptForPushNotifications }}" }
    when: Safari_CanPromptForPushNotifications is defined
    notify: restart Safari

  - name: "Safari - Exensions - Automatically update extensions from Safari Extensions Gallery"
    osx_defaults: { domain: 'com.apple.safari', key: 'InstallExtensionUpdatesAutomatically', type: bool, value: "{{ Safari_InstallExtensionUpdatesAutomatically }}" }
    when: Safari_InstallExtensionUpdatesAutomatically is defined
    notify: restart Safari

  - name: "Safari - Advanced - Smart Search Field - Show full website address"
    osx_defaults: { domain: 'com.apple.safari', key: 'ShowFullURLInSmartSearchField', type: bool, value: "{{ Safari_ShowFullURLInSmartSearchField }}" }
    when: Safari_ShowFullURLInSmartSearchField is defined
    notify: restart Safari

  - name: "Safari - Advanced - Accessibility - Never use font sizes smaller than"
    osx_defaults: { domain: 'com.apple.safari', key: "{{ item.key }}", type: '{{ item.type }}', value: "{{ Safari_WebKitMinimumFontSize }}" }
    with_items:
      - { key: "WebKitMinimumFontSize", type: "int" }
      - { key: "com.apple.Safari.ContentPageGroupIdentifier.WebKit2MinimumFontSize", type: "float" }
    when: Safari_WebKitMinimumFontSize is defined
    notify: restart Safari

  - name: "Safari - Advanced - Accessibility - Press Tab to highlight ach item on a webpage"
    osx_defaults: { domain: 'com.apple.safari', key: '{{ item }}', type: bool, value: "{{ Safari_WebKitTabToLinksPreferenceKey }}" }
    with_items: [ "WebKitTabToLinksPreferenceKey", "com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks" ]
    when: Safari_WebKitTabToLinksPreferenceKey is defined
    notify: restart Safari

  - name: "Safari - Advanced - Bonjour - Include Bonjour in the Bookmarks Menu"
    osx_defaults: { domain: 'com.apple.safari', key: 'BookmarksMenuIncludesRendezvous', type: bool, value: "{{ Safari_BookmarksMenuIncludesRendezvous }}" }
    when: Safari_BookmarksMenuIncludesRendezvous is defined
    notify: restart Safari

  #- name: "Safari - Advanced - Bonjour - Include Bonjour in the Favorites bar

  - name: "Safari - Advanced - Internet plug-ins - Stop plug-ins to saver power"
    osx_defaults: { domain: 'com.apple.safari', key: 'com.apple.Safari.ContentPageGroupIdentifier.WebKit2PlugInSnapshottingEnabled', type: bool, value: "{{ Safari_StopPuginsToSavePower }}" }
    when: Safari_StopPuginsToSavePower is defined
    notify: restart Safari

  #- name: "Safari - Advanced - Style sheet

  #- name: "Safari - Advanced - Default encoding

  #- name: "Safari - Advanced - Proxies

  - name: "Safari - Advanced - Show Develop menu in menu bar"
    osx_defaults: { domain: 'com.apple.safari', key: '{{ item }}', type: bool, value: "{{ Safari_ShowDeloperMenu }}" }
    with_items:
      - "IncludeDevelopMenu"
      - "WebKitDeveloperExtrasEnabledPreferenceKey"
      - "com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled"
    when: Safari_ShowDeloperMenu is defined
    notify: restart Safari

  - name: "Safari - Advanced - Debug Menu"
    osx_defaults: { domain: 'com.apple.safari', key: 'IncludeInternalDebugMenu', type: bool, value: "{{ Safari_DebugMenu }}" }
    when: Safari_DebugMenu is defined
    notify: restart Safari

  - name: "Safari - View - Show Favorites Bar"
    osx_defaults: { domain: 'com.apple.safari', key: 'ShowFavoritesBar-v2', type: bool, value: "{{ Safari_ShowFavoritesBar }}" }
    when: Safari_ShowFavoritesBar is defined
    notify: restart Safari

  - name: "Safari - View - Show Tab Bar"
    osx_defaults: { domain: 'com.apple.safari', key: 'AlwaysShowTabBar', type: bool, value: "{{ Safari_AlwaysShowTabBar }}" }
    when: Safari_AlwaysShowTabBar is defined
    notify: restart Safari

  - name: "Safari - View - Show Status Bar"
    osx_defaults: { domain: 'com.apple.safari', key: 'ShowOverlayStatusBar', type: bool, value: "{{ Safari_ShowOverlayStatusBar }}" }
    when: Safari_ShowOverlayStatusBar is defined
    notify: restart Safari

  - name: "Safari - View - Show Sidebar"
    osx_defaults: { domain: 'com.apple.safari', key: 'ShowSidebarInNewWindows', type: bool, value: "{{ Safari_ShowSidebarInNewWindows }}" }
    when: Safari_ShowSidebarInNewWindows is defined
    notify: restart Safari

  - name: "Safari - View - Show Sidebar Mode"
    osx_defaults: { domain: 'com.apple.safari', key: 'SidebarViewModeIdentifier', type: string, value: "{{ Safari_SidebarViewModeIdentifier }}" }
    when: Safari_SidebarViewModeIdentifier is defined
    notify: restart Safari

  - name: "Safari - Bookmarks - Show Frequently Visited in Favorites"
    osx_defaults: { domain: 'com.apple.safari', key: 'ShowFrequentlyVisitedSites', type: bool, value: "{{ Safari_ShowFrequentlyVisitedSites }}" }
    when: Safari_ShowFrequentlyVisitedSites is defined
    notify: restart Safari
  # Privilege escalation to `target_user_id` is only required for inner steps when
  # the `target_user_id` doesn't match the `ansible_user_id`
  become: "{{ (target_user_id != ansible_user_id) | bool }}"
  become_user: "{{ target_user_id }}"
